AILinux Project Structure
========================

Base directory: /home/zombie/ailinux

This document provides an overview of the AILinux project structure and describes
the purpose of key files and directories.

1. Directory Structure
---------------------

/home/zombie/ailinux/
├── backend/                  # Server-side AI processing and API
│   ├── ai_model.py           # AI model integration (GPT4All, OpenAI, etc.)
│   ├── app.py                # Flask REST API server
│   ├── backend.js            # Express-based backend server
│   ├── backend.log           # Backend server logs
│   ├── gpt4all/              # GPT4All specific implementations
│   │   └── app.py            # GPT4All command line interface
│   ├── gpt4allinit.py        # GPT4All initialization script
│   ├── hugging.py            # Hugging Face model exploration utility
│   ├── huggingface.py        # Hugging Face model integration
│   ├── package-lock.json     # Node.js dependencies lock file
│   ├── requirements.txt      # Python dependencies
│   └── websocketserv.py      # WebSocket server for real-time communication
├── frontend/                 # User interface components
│   ├── aiineraction.html     # AI interaction web interface
│   ├── config.js             # Configuration management 
│   ├── config.py             # Python configuration loader
│   ├── frontend.log          # Frontend application logs
│   ├── gemini-api-setup.js   # Google Gemini API setup
│   ├── importexport.js       # Settings import/export utility
│   ├── index.html            # Main application HTML interface
│   ├── llama.html            # LLaMA model interface
│   ├── log.html              # Log viewer interface
│   ├── logmanager.js         # Log management utility
│   ├── main.js               # Electron main process
│   ├── package.json          # Frontend dependencies
│   ├── preload.js            # Electron preload script
│   ├── requirements.txt      # Frontend Python dependencies
│   ├── settings.html         # Settings management interface
│   └── twitchbot.py          # Twitch integration bot
├── client/                   # Client utilities and scripts
│   ├── adjust_hierarchy_with_debugger.py  # Directory structure fix utility
│   ├── alphaos.py            # WebSocket client implementation
│   ├── analyze.py            # Code analysis utility
│   ├── bigfiles.py           # Large file finder (Python)
│   ├── bigfiles.sh           # Large file finder (Shell)
│   ├── cleanup.py            # Code cleanup utility
│   ├── file-sync-client.py   # File synchronization with server
│   ├── package.json          # Client-side dependencies
│   ├── postcode.sh           # Code analysis and reporting script
│   ├── postlog.sh            # Log collection script
│   ├── requirements.txt      # Client Python dependencies
│   ├── start.js              # Application starter script
│   ├── start.sh              # Startup shell script
│   ├── uploadready.py        # GitHub upload preparation utility
│   └── websocket_client.py   # WebSocket client for backend communication
├── logs/                     # Directory for log files
│   ├── backend.log           # Backend process logs
│   └── frontend.log          # Frontend process logs
├── .github/                  # GitHub configurations
│   └── workflows/            # GitHub Actions workflows
│       └── pylint.yml        # Pylint automated code quality checks
├── directory_structure.json  # Project directory structure in JSON format
├── hierarchy_analysis.log    # Directory structure analysis log
├── large_files.json          # Large files tracking data
├── LICENSE                   # Project license
├── optimization.log          # Code optimization log
├── README.md                 # Project documentation
├── requirements.txt          # Project-wide Python dependencies
├── SECURITY.md               # Security guidelines and policies
└── structure.txt             # This file - Project structure overview